# GRF - Framework de Componentes Grist - TODO

## Fase Final: Estilização e Refatoração

### Tarefas Concluídas

- [DONE] **Corrigir bugs no popup de configuração de campo:**
  - Adicionado fundo branco ao popup de estilo de campo para corrigir fundo transparente.
  - Corrigido erro de TypeError que impedia a abertura da configuração para campos do tipo RefList.

- [DONE] **Implementar configurações de exibição para campos RefList:**
  - A renderização de campos RefList agora respeita as configurações de "máximo de linhas" e "colunas visíveis" definidas no popup de estilo.

- [DONE] **Refatorar "Action Buttons" para serem Posicionáveis (Virtual Fields):**
  - Botões de ação agora são tratados como "campos virtuais" no editor de configuração.
  - Eles aparecem na lista de "Available Fields" e podem ser arrastados e posicionados no grid de layout.
  - A lógica de renderização no `CardSystem.js` foi alterada para desenhar os botões de acordo com sua posição no layout.
  - A lógica de estado no `config-cards.js` foi extensivamente modificada para suportar a criação, posicionamento, salvamento e exclusão dos botões como parte do layout.

- [DONE] **Testar a funcionalidade dos novos "Action Buttons" (configuração, renderização e execução das ações).**

- [DONE] **Resolver Inconsistência de UI na Configuração:**
  - Desabilitar os seletores de cor de "Label Style" and "Data Style" na configuração da "Top Bar" quando a opção "Também aplicar cor de texto do campo" está marcada.
  - Arquivo modificado: `ConfigManager/editors/config-cards.js`.

- [DONE] **Refatorar o `CardSystem` para usar o `grist-field-renderer` (Tarefa 3):**
  - O objetivo era unificar a formatação de dados (datas, números, etc.) e a aparência dos campos.
  - O `CardSystem.js` foi modificado para delegar a renderização de cada campo para a biblioteca `grist-field-renderer.js`.
  - Arquivo modificado: `libraries/grist-card-system/CardSystem.js`.

- [DONE] **Implementar "Action Buttons" no `CardSystem` (Ação Primária):**
  - **Passo 1: Expansão da Configuração (`config-cards.js`)**: Adicionada UI para configurar botões de ação secundária (ícone, tooltip, tipo de ação, configuração específica).
  - **Passo 2: Implementação da Renderização (`CardSystem.js`)**: Botões de ação são renderizados nos cards e publicam eventos `grf-navigation-action-triggered` ao serem clicados.
  - **Passo 3: O Orquestrador (`CardViewer.js`) se Torna Mais Inteligente**: `CardViewer.js` escuta eventos de navegação e executa as ações configuradas (navegar para página Grist, abrir URL, atualizar registro).

- [DONE] **Implementar Fundo de Campo Customizável:**
  - Adicionado opções na aba "Styling" para habilitar um fundo para os campos.
  - A cor do fundo deve ser uma versão mais clara (15%, 30%, 50%) da cor de fundo do card.
  - A caixa de fundo deve envolver o rótulo e o valor do campo.

- [DONE] **Corrigir Lógica de Configuração do Drawer:**
  - A configuração do Drawer agora salva o `tableId` para o qual foi criada.
  - O Gerenciador de Configurações agora pré-seleciona a tabela correta ao editar uma configuração de Drawer, tornando o processo mais intuitivo.

- [DONE] **Implementar "Group Boxes" no Layout:**
  - Adicionada a capacidade de criar, posicionar, redimensionar e estilizar caixas de grupo no layout dos cards para organização visual.

- [DONE] **RefList: Paginação nos Cards:**
  - Adicionada uma opção de configuração para que tabelas de RefList com muitas linhas possam ser paginadas diretamente na interface do card.

- [DONE] **RefList: Colapsar/Expandir nos Cards:**
  - Permitir que uma tabela de RefList renderizada em um card possa ser "colapsada" para ocupar menos espaço e "expandida" pelo usuário para ver todos os dados.

- [DONE] **RefList: Expansão Vertical no Layout:**
  - Em vez de um handle de arrastar, a expansão vertical agora é controlada por uma opção "Card Rows" no popup de estilo do campo.
  - A lógica de `rowSpan` foi implementada no `CardSystem.js` e no editor de layout `config-cards.js`.

- [DONE] **RefList: Estilo "Tabela Zebrada":**
  - Adicionada opção "Tabela Zebrada" na configuração de RefList para o Card System.
  - Corrigido o bug no Drawer onde o estilo zebrado não era visível, ajustando a cor de fundo para ser mais proeminente.
  - A lógica de renderização foi unificada em `render-reflist.js` para suportar a opção em ambos os componentes (Card e Drawer).

- [DONE] **Correção de Bug Crítico no Editor do Drawer:**
  - Resolvido um bug de regressão onde salvar uma configuração de Drawer resultava em uma configuração vazia, fazendo com que o conteúdo do drawer não fosse exibido.
  - O erro foi causado por uma sintaxe incorreta no arquivo `config-drawer.js` após uma refatoração.

- [DONE] **Melhorias nos Ícones de Ação:**
  - Implementada a funcionalidade de "Grupos de Ícones", permitindo agrupar múltiplos botões de ação.
  - Adicionada configuração de alinhamento (esquerda, centro, direita) para os grupos de ícones dentro do card.
  - Adicionada opção para redimensionar o tamanho dos ícones globalmente.
  - A interface de configuração foi refatorada para gerenciar grupos em vez de botões individuais.

- [DONE] **Melhorias de UX e Estilo (Card System):**
  - Adicionada opção de "Internal Card Padding" para controlar o espaçamento interno dos cards.
  - Implementado tooltip em campos com altura limitada para exibir o texto completo.
  - Adicionadas opções de estilo para caixas de campo (borda, fundo, efeito) e labels (negrito, cor, fonte).
  - Corrigido bug que impedia a renderização de quebras de linha em campos de texto.
  - Corrigidos múltiplos bugs na inicialização da UI de configuração que impedia a persistência de estados.
  - Melhoradas as mensagens de erro na inicialização do widget para guiar o usuário na configuração da tabela `Grf_config`.

### Próximas Tarefas

- [ ] Garantir que os efeitos de "Bevel" e "Drop Shadow" para as caixas de campo sejam visualmente aparentes.
